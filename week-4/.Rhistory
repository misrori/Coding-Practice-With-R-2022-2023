df <- tibble(
id = c(1,2,3,4,5),
age = c(10,11,12,13,NA),
grade = c("A","B","C","D","E"))
df2 <- data.frame(
'age' = c(1,2,3),
'grade' = c("A","B","c")
)
# Print table ---------------------------------------------
df %>%
kbl() %>%
kable_classic(full_width = F)
# Remove objects ------------------------------------------
rm(df2)
# Initial look at the data --------------------------------
glimpse(df)
head(df)
tail(df)
summary(df)
# Indexing dfs --------------------------------------------
# Get first column - returns a list
df[1]
df[,1]
# Get first row
df[1,]
# Both
df[1,3] # returns a vector
df[[1,1]] # returns a value
# Using column names --------------------------------------
df$age
df$age[3]
# Filtering values ----------------------------------------
df[df$age > 10, ]
df[is.na(df$age), ]
df[df$age > 10 & df$age <= 12, ]
df[df$grade == "A" | df$grade == "B", ]
df[df$grade %in% c("A","B"), ]
df[which(df$age == 10 | df$age == 12),]
# Aggregation
sum(df['age'], na.rm = T)
# Aggregation
sum(df['age'])
df2 = data.frame(
id_student = c(1,2,3,4,5),
id_teacher = c(10,10,12,12,13)
)
# Joins
df2 <- data.frame(
id_student = c(1,2,3,4,5),
id_teacher = c(10,10,12,12,13)
)
df3 <- full_join(df, df2, by = c("id", "id_student"))
View(df2)
df3 <- full_join(df, df2, by = c("id", "id_student"))
df3 <- full_join(x= df, y = df2, by.x = "id", by.y = "id_student")
df3 <- full_join(x= df, y = df2, by = c("id" = "id_student"))
# left_join, right_join, inner_join
df4 <- anti_join(x= df, y = df2, by = c("id" = "id_student"))
# Joins
df2 <- data.frame(
id_student = c(1,2,3,4),
id_teacher = c(10,10,12,12)
)
# left_join, right_join, inner_join
df4 <- anti_join(x= df, y = df2, by = c("id" = "id_student"))
df4 <- anti_join(x= df, y = df2, by = c("id" = "id_student"))
# Append
rbind(df, df2)
# Append
rbind(df, df2[1:2])
View(df)
View(df2)
# Append
rbind(df[1:2], df2)
rbind(df, df2)
# Append
df <- tibble(
id = c(6,7,8,9,10),
age = c(10,11,12,13,NA),
grade = c("A","B","C","D","E"))
# Create own dataframe (from column vectors) -------------
df <- tibble(
id = c(1,2,3,4,5),
age = c(10,11,12,13,NA),
grade = c("A","B","C","D","E"))
# Append
df2 <- tibble(
id = c(6,7,8,9,10),
age = c(10,11,12,13,NA),
grade = c("A","B","C","D","E"))
rbind(df, df2)
#
df2 <- tibble(
id = c(1,2,3,4,5),
gender = c("F","M","M","F","M"))
cbind(df, df2)
# Spread (long -> wide)
long_df <- data.frame(
'country' = c("HU","HU","HU","AU","AU","AU","DE","DE","DE"),
'year' = c(2010,2011,2012,2010,2011,2012,2010,2011,2012),
'gdp' = c(100,101,102,111,112,113,121,122,123)
)
View(long_df)
wide_df <- spread( long_df , key = year , value = gdp )
View(wide_df)
# Gather
long_df <- gather( wide_df , `2010`,`2012`,`2012` , key = year, value = gdp )
View(long_df)
# Gather
long_df <- gather( wide_df  , key = year, value = gdp )
View(long_df)
wide_df <- spread( long_df , key = year , value = gdp )
View(wide_df)
# Gather
long_df <- gather( wide_df , `2010`,`2012`,`2012` , key = year, value = gdp )
View(long_df)
# Gather
long_df <- gather( wide_df , `2010`,`2011`,`2012` , key = year, value = gdp )
View(long_df)
# Change value
df$age[1,] <- 40
View(df)
# Change value
df$age[1] <- 40
df$age[1,1] <- 41
# Change value
df$age[1] <- 40
View(df)
df[1,1] <- 41
View(df)
# Add new row
new_row <- data.frame('id' = 6, 'age' = 15, 'grade' = "B-")
rbind(df, new_row)
add_row(df, new_row)
# Add new column
df$born <- 2022 -df$age
mutate(df, born = 2022 -df$age)
# Additional functions
separate(df, grade, 2, into = c("grade_1", "grade_2"))
df$id_2 <- id + "_01"
df$id_2 <- df$id + "_01"
df$id_2 <- df$grade + "-"
df$id_2 <- paste0(df$grade,"-")
df$grade2 <- paste0(df$grade,"-")
View(df)
# Additional functions
separate(df, grade2, 2, into = c("grade_1", "grade_2"))
# Additional functions
separate(df, grade2, 1, into = c("grade_1", "grade_2"))
gsub("-", "+", df$grade)
gsub("-", "+", df$grade2)
grade3 <- gsub("-", "+", df$grade2)
df$grade3 <- gsub("-", "+", df$grade2)
View(df)
View(df)
View(df)
View(df)
# Data cleaning ----------------------------------------------------------
# Pipe operator
# allows us to pass the result of one function/argument to the other one in sequence.
df$grade[3] <- "A"
View(df)
df %>%
group_by(grade) %>%
summarise(n())
df %>%
group_by(grade) %>%
summarise(count = n(), mean_age = mean(age))
df %>%
group_by(grade) %>%
summarise(count = n(), mean_age = mean(age, na.rm = T))
df %>%
group_by(grade)
df %>%
group_by(grade) %>%
summarise(count = n(), mean_age = mean(age, na.rm = T))
df <- tibble(id=c(1,2,3,4,5,6),
age=c(25,30,33,NA,26,38),
grade=c("A","A+","B","B-","B+","A"))
View(df)
mean(df$age)
mean(df$age, na.rm = T)
library(tidyverse)
# Summary functions
mean(df$age, na.rm = TRUE)
df2 <- tibble(id=c(1,2,3,4,5,6),
teacher_id=c(10,20,30,40,50,60))
View(df)
View(df2)
# Join data-frames
left_join(df, df2, by = "id")
# Join data-frames
d3 <- left_join(df, df2, by = "id")
View(d3)
df2 <- tibble(id=c(1,2,3,4,5),
teacher_id=c(10,20,30,40,50))
# Join data-frames
d3 <- left_join(df, df2, by = "id")
View(d3)
df2 <- tibble(id_student=c(1,2,3,4,5),
teacher_id=c(10,20,30,40,50))
# Join data-frames
d3 <- left_join(df, df2, by = "id")
# Join data-frames
d3 <- left_join(df, df2, by = c("id" = "id_student")
View(d3)
# Join data-frames
d3 <- left_join(df, df2, by = c("id" = "id_student")
View(d3)
# Join data-frames
d3 <- left_join(df, df2, by = c("id" = "id_student"))
View(d3)
# Join data-frames
d3 <- left_join(df, df2, by = c("id" , "id_student"))
# Join data-frames
d3 <- left_join(df, df2, by = c("id" = "id_student"))
# Filtering values ----------------------------------------
df[df$age > 10, ]
flights[dep_delay > 1000]
library(nycflights13)
flights[dep_delay > 1000]
a<- flights[dep_delay > 1000]
a<- flights[flights$dep_delay > 1000]
a <- flights[flights$dep_delay > 1000, ]
View(a)
a <- flights[flights$dep_delay > 1000, ]
flights
flights <- flights
View(flights)
a <- flights[flights$dep_delay > 1000, ]
a <- flights[flights$dep_delay > 1000, ]
View(a)
a <- flights[flights$dep_delay > 1000, na.rm=T]
a <- flights[flights$dep_delay > 1000, ]
fights[which(df$dep_delay > 1000),]
fights[which(flights$dep_delay > 1000),]
flights <- flights
fights[which(flights$dep_delay > 1000),]
flights[which(flights$dep_delay > 1000),]
flights <- data.frame(flights)
a <- flights[flights$dep_delay > 1000, ]
flights[which(flights$dep_delay > 1000),]
diamonds <- read.delim("~/GitHub/Coding-Practice-With-R-2022-2023/week-4/diamonds.txt")
View(diamonds)
color = c("blue", "black")
iris
iris <- iris
ggplot(data = iris, aes(x = Sepal.Length, y = Sepal.Width)) +
geom_point(color = color[1], size = 1.5,  shape = 16, alpha = 0.8, show.legend=FALSE, na.rm = TRUE) +
#scale_x_continuous(limits=c(myxmin, myxmax), breaks=seq(myxmin, myxmax, by=myxfreq)) +
#scale_y_continuous(limits = c(myymin, myymax), breaks = seq(myymin, myymax,myyfreq)) +
labs(x = "Sepal Length",y = "Sepal Width")+
theme_bw() +
background_grid(major = "xy", minor="none")
library(ggplot2)
color = c("blue", "black")
iris <- iris
ggplot(data = iris, aes(x = Sepal.Length, y = Sepal.Width)) +
geom_point(color = color[1], size = 1.5,  shape = 16, alpha = 0.8, show.legend=FALSE, na.rm = TRUE) +
#scale_x_continuous(limits=c(myxmin, myxmax), breaks=seq(myxmin, myxmax, by=myxfreq)) +
#scale_y_continuous(limits = c(myymin, myymax), breaks = seq(myymin, myymax,myyfreq)) +
labs(x = "Sepal Length",y = "Sepal Width")+
theme_bw() +
background_grid(major = "xy", minor="none")
library(gridextra)
library(gridExtra)
ggplot(data = iris, aes(x = Sepal.Length, y = Sepal.Width)) +
geom_point(color = color[1], size = 1.5,  shape = 16, alpha = 0.8, show.legend=FALSE, na.rm = TRUE) +
#scale_x_continuous(limits=c(myxmin, myxmax), breaks=seq(myxmin, myxmax, by=myxfreq)) +
#scale_y_continuous(limits = c(myymin, myymax), breaks = seq(myymin, myymax,myyfreq)) +
labs(x = "Sepal Length",y = "Sepal Width")+
theme_bw() +
background_grid(major = "xy", minor="none")
ggplot(data = iris, aes(x = Sepal.Length, y = Sepal.Width)) +
geom_point(color = color[1], size = 1.5,  shape = 16, alpha = 0.8, show.legend=FALSE, na.rm = TRUE) +
#scale_x_continuous(limits=c(myxmin, myxmax), breaks=seq(myxmin, myxmax, by=myxfreq)) +
#scale_y_continuous(limits = c(myymin, myymax), breaks = seq(myymin, myymax,myyfreq)) +
labs(x = "Sepal Length",y = "Sepal Width")+
theme_bw()
getwd()
knitr::opts_chunk$set(warning = FALSE, message = FALSE, fig.pos = 'H')
# set working directory
setwd('C:/User/Documents/GitHub/Coding-Practice-With-R-2022-2023/week-5')
# set working directory
setwd('C:/Users/User/Documents/GitHub/Coding-Practice-With-R-2022-2023/week-5')
# Define path
data_in <- paste0(getwd(), "/data_in")
data_out <- paste0(getwd(), "/data_out")
---
title: "Week 5"
author: "Viki - Misi"
date: "`r format(Sys.time(), '%d %B %Y')`"
output:
prettydoc::html_pretty:
highlight: github
theme: cayman
toc: yes
# set working directory
setwd('C:/Users/User/Documents/GitHub/Coding-Practice-With-R-2022-2023/week-5')
convert(paste0(data, "/counties.rds"), paste0(data_out, "/counties.xlsx"))
# Import libraries
library(tidyverse)
convert(paste0(data, "/counties.rds"), paste0(data_out, "/counties.xlsx"))
convert(paste0(data, "/counties.rds"), paste0(data_out, "/counties.xlsx"))
if (!("rio" %in% installed.packages())) {
install.packages("rio")
}
library(rio)
convert(paste0(data, "/counties.rds"), paste0(data_out, "/counties.xlsx"))
counties <- import(file = paste0(data, "/counties.rds"))
data <- paste0(getwd(), "/data")
convert(paste0(data, "/counties.rds"), paste0(data_out, "/counties.xlsx"))
convert(paste0(data, "/babynames.rds"), paste0(data_out, "/babynames.xlsx"))
babynames <- import(paste0(data, "/babynames.xlsx"))
# Define path to data folder
data <- paste0(getwd(), "/data")
counties <- import(paste0(data, "/counties.xlsx"))
babynames <- import(paste0(data, "/babynames.xlsx"))
glimpse(counties)
glimpse(babynames)
glimpse(counties)
glimpse(babynames)
View(counties)
counties_selected %>%
arrange(desc(population))
counties_selected <- counties %>%
select(state, county, population, unemployment, metro, land_area, contains("work"), starts_with("income"))
counties_selected %>%
arrange(desc(population))
counties_selected %>%
group_by (state) %>%
summarize(count = n()) %>%
arrange(desc(count))
counties_selected %>%
group_by (state) %>%
summarize(number = sum(population))  %>%
arrange(desc(number))
counties_selected %>%
group_by(state, metro) %>%
summarize(total_population = sum(population),
total_area = sum(land_area),
average_unemployment = mean(unemployment)) %>%
mutate(density = total_population/ total_area) %>%
arrange(state, desc(average_unemployment)) %>%
top_n(10)
counties_selected %>%
group_by(state, metro) %>%
summarize(total_population = sum(population),
total_area = sum(land_area),
average_unemployment = mean(unemployment)) %>%
mutate(density = total_population/ total_area) %>%
arrange(desc(average_unemployment)) %>%
top_n(10)
counties_selected %>%
group_by(state) %>%
summarize(total_population = sum(population),
total_area = sum(land_area),
average_unemployment = mean(unemployment)) %>%
mutate(density = total_population/ total_area) %>%
arrange(desc(average_unemployment)) %>%
top_n(10)
aggregated_data <- counties_selected %>%
group_by(state, metro) %>%
summarize(total_population = sum(population),
total_area = sum(land_area),
average_unemployment = mean(unemployment)) %>%
mutate(density = total_population/ total_area) %>%
arrange(desc(average_unemployment)) %>%
top_n(10)
aggregated_data
counties_selected %>%
group_by (state) %>%
summarize(total_population = sum(population))  %>%
arrange(desc(total_population)) %>%
ggplot(aes(x=state, y=total_population)) %>%
geom_bar()
counties_selected %>%
group_by (state) %>%
summarize(total_population = sum(population))  %>%
arrange(desc(total_population)) %>%
ggplot(aes(x=state, y=total_population)) %>%
geom_col()
counties_selected %>%
group_by (state) %>%
summarize(total_population = sum(population))  %>%
arrange(desc(total_population)) %>%
ggplot(aes(x=state, y=total_population)) +
geom_col()
counties_selected %>%
group_by (state) %>%
summarize(total_population = sum(population))  %>%
arrange(desc(total_population)) %>%
top_n(10) %>%
ggplot(aes(x=state, y=total_population)) +
geom_col()
counties_selected %>%
group_by (state) %>%
summarize(total_population = sum(population))  %>%
arrange(desc(total_population)) %>%
top_n(10)
counties_selected %>%
group_by (state) %>%
summarize(total_population = sum(population))  %>%
arrange(desc(total_population)) %>%
top_n(10) %>%
ggplot(aes(x=state, y=total_population)) +
geom_col()
counties_selected %>%
group_by (state) %>%
summarize(total_population = sum(population))  %>%
arrange(desc(total_population)) %>%
top_n(10) %>%
ggplot(aes(x=state, y=total_population)) +
geom_col() +
theme_bw()
counties_selected %>%
group_by (state) %>%
summarize(total_population = sum(population))  %>%
arrange(desc(total_population)) %>%
top_n(10) %>%
ggplot(aes(x=state, y=reorder(state, -total_population, sum))) +
geom_col() +
theme_bw()
counties_selected %>%
group_by (state) %>%
summarize(total_population = sum(population))  %>%
arrange(desc(total_population)) %>%
top_n(10) %>%
ggplot(aes(x=reorder(state, -total_population, sum), y=total_population)) +
geom_col() +
theme_bw()
counties_selected %>%
group_by (state) %>%
summarize(total_population = sum(population))  %>%
arrange(desc(total_population)) %>%
top_n(10) %>%
ggplot(aes(x=reorder(state, -total_population, sum), y=total_population)) +
geom_col(fill = "blue") +
theme_bw()
counties_selected %>%
group_by (state) %>%
summarize(total_population = sum(population))  %>%
arrange(desc(total_population)) %>%
top_n(10) %>%
ggplot(aes(x=reorder(state, -total_population, sum), y=total_population)) +
geom_col(fill = "navy") +
theme_bw()
knitr::opts_chunk$set(warning = FALSE, message = FALSE, fig.pos = 'H')
# Clear environment
rm(list=ls())
# Import libraries
library(kableExtra)
# set working directory
setwd('C:/Users/User/Documents/GitHub/Coding-Practice-With-R-2022-2023/week-5')
# Define path
data_in <- paste0(getwd(), "/data_in")
data_out <- paste0(getwd(), "/data_out")
if (!("rio" %in% installed.packages())) {
install.packages("rio")
}
library(rio)
iris_xlsx <- import(file = paste0(data_in, "/iris.xlsx"))
kable(head(iris_xlsx)) %>%
kable_styling(full_width = F)
# Export to one sheet
virginica <- subset(iris_xlsx, Species == "virginica")
export(virginica, file = paste0(data_out, "/virginica.xlsx"))
# Export to one sheet
virginica <- subset(iris_xlsx, Species == "virginica")
export(virginica, file = paste0(data_out, "/virginica.xlsx"))
# Or export multiple sheets
export(list(virginica = subset(iris_xlsx, Species == "virginica"),
setosa = subset(iris_xlsx, Species == "setosa")), paste0(data_out,"/iris_xlsx_multi.xlsx"))
iris_sav <- import(file = paste0(data_in, "/iris.sav"))
kable(head(iris_sav)) %>%
kable_styling(full_width = F)
iris_sav %>%
filter(Species == "setosa") %>%
export(paste0(data_out, "/virginica.sav"))
View(iris_sav)
iris_sav %>%
filter(Species == "setosa")
library(tidyverse)
counties_selected %>%
filter(state %in% c('New York', 'Alabama', 'Texas')) %>%
arrange(desc(population)) %>%
top_n(10)
setwd('C:/Users/User/Documents/GitHub/Coding-Practice-With-R-2022-2023/week-4')
library(rio)
import('diamonds.csv')
a <- import('diamonds.csv')
View(a)
a <- import('diamonds.txt')
b <- import('diamonds.txt')
# install.packages('nycflights13')
library(nycflights13)
library( tidyverse )
flights %>%
filter(!is.na(tailnum)) %>%
group_by(tailnum)%>%
summarise('in_air'= sum(air_time) ) %>%
arrange(-in_air) %>%
head(1)
t <-
flights %>%
filter(month==8) %>%
group_by(carrier)%>%
summarise('mean_delay'=mean(arr_delay, na.rm = T)) %>%
arrange(-mean_delay) %>%
head(1)
merge(t, airlines, by = 'carrier') %>%
select(name)
